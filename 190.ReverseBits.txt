Reverse bits of a given 32 bits unsigned integer.
Answer: 
/**
 * @param {number} n - a positive integer
 * @return {number} - a positive integer
 */
var reverseBits = function(n) {
    let rev = 0;
    
    for(let i = 0; i < 32; i++) { 
        // bitwise left shift
            // 'rev' by 1
        rev <<= 1;
        
     // if current bit is '1'
        if ((n & 1) == 1){
            rev ^= 1;}
        // bitwise right shift
            //'n' by 1
        n >>= 1;
    }
    //Our input is an unsigned integer but the left shift bitwise 
    //operator returns a signed 32-bit integer.
//We can convert the signed integer back to unsigned by using the "unsigned right shift" operator. //result >>> 0 won't shift any of our existing bits but will set the sign bit as 0
    return rev >>>0;
};