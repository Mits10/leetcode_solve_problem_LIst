Given an integer array nums where the elements are sorted in ascending order, convert it to a height-balanced binary search tree.

A height-balanced binary tree is a binary tree in which the depth of the two subtrees of every node never differs by more than one.

Answer: 
/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {number[]} nums
 * @return {TreeNode}
 */
var sortedArrayToBST = function(nums) {
   const helper = (left, right) => {
       //if(left > right) return;
       console.log(left,"left");
       console.log(right,"right");
        let value = (left + right)/2 ;
       console.log(value,"value");
       let mid = Math.ceil(value);
       
       console.log(mid,"mid");
       let rootValue = nums[mid];
       let root = new TreeNode (rootValue);
      
       if(mid > left){
       root.left = helper(left,mid-1);
       }
       if(mid < right) {
       root.right = helper(mid+1,right);
       }
       return root;
   } 
    return helper(0,nums.length-1);
};