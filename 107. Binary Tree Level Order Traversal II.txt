QUE: 
Given the root of a binary tree, return the bottom-up level order traversal of its nodes' values. 
(i.e., from left to right, level by level from leaf to root).

ANSWER: 
/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[][]}
 */

/*---------Recursive Solution-------------------*/
var levelOrderBottom = function(root) {
    var stack = [];
    const dfs = (node,level) => {
        if(!node ) return;
        if(!stack[level]) {
            stack[level] = [];
        }
        stack[level].push(node.val);
        dfs(node.left,level+1);
        dfs(node.right,level+1);
    }
    dfs(root,0);
  return stack.reverse();
};